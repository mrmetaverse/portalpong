{"ast":null,"code":"var _jsxFileName = \"/home/mrmetaverse/Code/portalpong/src/components/SpyGame.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PlatformClass {\n  constructor(x, y, width = 2) {\n    this.mesh = void 0;\n    this.top = void 0;\n    this.bottom = void 0;\n    this.left = void 0;\n    this.right = void 0;\n    const geometry = new THREE.BoxGeometry(width, 0.2, 1);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x95a5a6\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.set(x, y, 0);\n    this.top = y + 0.1;\n    this.bottom = y - 0.1;\n    this.left = x - width / 2;\n    this.right = x + width / 2;\n  }\n}\nclass SpellClass {\n  constructor(position, direction) {\n    this.mesh = void 0;\n    this.velocity = void 0;\n    this.lifetime = void 0;\n    this.exploded = void 0;\n    this.explosionRadius = void 0;\n    this.explosionMesh = void 0;\n    const geometry = new THREE.SphereGeometry(0.2);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      transparent: true,\n      opacity: 0.8\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const spawnOffset = new THREE.Vector3(direction.x * 1, 1, 0);\n    this.mesh.position.copy(position).add(spawnOffset);\n    this.velocity = new THREE.Vector3(direction.x * 0.3, 0.3, 0);\n    this.lifetime = 30;\n    this.exploded = false;\n    this.explosionRadius = 1.5;\n  }\n  update(scene) {\n    if (this.exploded) return true;\n    this.lifetime--;\n    if (this.lifetime <= 0) {\n      this.explode(scene);\n      return true;\n    }\n    this.mesh.position.add(this.velocity);\n    return false;\n  }\n  explode(scene) {\n    this.exploded = true;\n    const explosionGeo = new THREE.SphereGeometry(this.explosionRadius);\n    const explosionMat = new THREE.MeshBasicMaterial({\n      color: 0xff8800,\n      transparent: true,\n      opacity: 0.5\n    });\n    this.explosionMesh = new THREE.Mesh(explosionGeo, explosionMat);\n    this.explosionMesh.position.copy(this.mesh.position);\n    scene.add(this.explosionMesh);\n    setTimeout(() => {\n      if (this.explosionMesh) {\n        scene.remove(this.explosionMesh);\n        scene.remove(this.mesh);\n      }\n    }, 100);\n  }\n}\nclass BallClass {\n  constructor() {\n    this.mesh = void 0;\n    this.velocity = void 0;\n    const geometry = new THREE.SphereGeometry(0.3);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.velocity = new THREE.Vector3((Math.random() - 0.5) * 0.2, (Math.random() - 0.5) * 0.2, 0);\n    this.mesh.position.set(0, 2, 0);\n  }\n  update(gameHeight) {\n    this.mesh.position.add(this.velocity);\n\n    // Horizontal wrapping (endless scroll)\n    if (this.mesh.position.x > 10) this.mesh.position.x = -10;\n    if (this.mesh.position.x < -10) this.mesh.position.x = 10;\n\n    // Vertical bouncing\n    if (this.mesh.position.y > gameHeight || this.mesh.position.y < 0) {\n      this.velocity.y *= -1;\n    }\n  }\n  bounce(normal, speed = 1) {\n    const dot = this.velocity.dot(normal);\n    this.velocity.sub(normal.multiplyScalar(2 * dot));\n    this.velocity.multiplyScalar(speed);\n  }\n  reset() {\n    this.mesh.position.set(0, 2, 0);\n    this.velocity.set((Math.random() - 0.5) * 0.2, (Math.random() - 0.5) * 0.2, 0);\n  }\n}\nclass PlayerClass {\n  constructor(color, startX) {\n    this.mesh = void 0;\n    this.velocity = void 0;\n    this.onGround = void 0;\n    this.direction = void 0;\n    const geometry = new THREE.SphereGeometry(0.5);\n    const material = new THREE.MeshBasicMaterial({\n      color\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.set(startX, 0, 0);\n    this.velocity = new THREE.Vector3(0, 0, 0);\n    this.onGround = true;\n    this.direction = new THREE.Vector3(1, 0, 0);\n  }\n  update(platforms) {\n    if (!this.onGround) {\n      this.velocity.y -= 0.015; // Gravity\n    }\n    const nextPosition = this.mesh.position.clone().add(this.velocity);\n\n    // Platform collision\n    this.onGround = false;\n    platforms.forEach(platform => {\n      if (nextPosition.x >= platform.left && nextPosition.x <= platform.right && nextPosition.y >= platform.bottom && nextPosition.y <= platform.top) {\n        if (this.velocity.y < 0) {\n          nextPosition.y = platform.top;\n          this.velocity.y = 0;\n          this.onGround = true;\n        }\n      }\n    });\n    this.mesh.position.copy(nextPosition);\n\n    // Floor collision\n    if (this.mesh.position.y < 0) {\n      this.mesh.position.y = 0;\n      this.velocity.y = 0;\n      this.onGround = true;\n    }\n\n    // Horizontal wrapping\n    if (this.mesh.position.x > 10) this.mesh.position.x = -10;\n    if (this.mesh.position.x < -10) this.mesh.position.x = 10;\n    this.velocity.x *= 0.9; // Friction\n  }\n  jump() {\n    if (this.onGround) {\n      this.velocity.y = 0.6; // Increased jump height\n      this.onGround = false;\n    }\n  }\n  moveLeft() {\n    this.velocity.x = -0.15;\n    this.direction.x = -1;\n  }\n  moveRight() {\n    this.velocity.x = 0.15;\n    this.direction.x = 1;\n  }\n  castSpell(scene) {\n    return new SpellClass(this.mesh.position, this.direction);\n  }\n}\nconst SpyGame = () => {\n  _s();\n  const mountRef = React.useRef(null);\n  const [gameState, setGameState] = React.useState({\n    player1Score: 0,\n    player2Score: 0,\n    gameStatus: 'playing'\n  });\n  React.useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x2c3e50);\n\n    // Camera and renderer setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Calculate game boundaries\n    const getViewBounds = () => {\n      const vFOV = THREE.MathUtils.degToRad(camera.fov);\n      const height = 2 * Math.tan(vFOV / 2) * Math.abs(camera.position.z);\n      const width = height * camera.aspect;\n      return {\n        width,\n        height\n      };\n    };\n    const viewBounds = getViewBounds();\n    const gameHeight = viewBounds.height - 1;\n\n    // Create game objects\n    const player1 = new PlayerClass(0xff0000, -5);\n    const player2 = new PlayerClass(0x0000ff, 5);\n    const ball = new BallClass();\n    let activeSpells = [];\n\n    // Add objects to scene\n    scene.add(player1.mesh);\n    scene.add(player2.mesh);\n    scene.add(ball.mesh);\n\n    // Create platforms\n    const platforms = [new PlatformClass(-5, 2), new PlatformClass(0, 3), new PlatformClass(5, 2)];\n    platforms.forEach(platform => scene.add(platform.mesh));\n\n    // Create portals\n    const createPortal = x => {\n      const curve = new THREE.EllipseCurve(x, 2.5, 0.5, 1.2, 0, 2 * Math.PI, true);\n      const points = curve.getPoints(50);\n      const portalGeometry = new THREE.BufferGeometry().setFromPoints(points);\n      const portalMaterial = new THREE.LineBasicMaterial({\n        color: x < 0 ? 0xff0000 : 0x0000ff\n      });\n      const portal = new THREE.Line(portalGeometry, portalMaterial);\n      scene.add(portal);\n      return portal;\n    };\n    createPortal(-9);\n    createPortal(9);\n\n    // Create floor\n    const floor = new THREE.Mesh(new THREE.BoxGeometry(20, 0.5, 5), new THREE.MeshPhongMaterial({\n      color: 0x808080\n    }));\n    floor.position.set(0, -1, 0);\n    scene.add(floor);\n\n    // Add lighting\n    scene.add(new THREE.AmbientLight(0xffffff, 0.5));\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n    directionalLight.position.set(0, 10, 0);\n    scene.add(directionalLight);\n\n    // Controls\n    const keys = {\n      player1: {\n        left: false,\n        right: false,\n        jump: false,\n        spell: false\n      },\n      player2: {\n        left: false,\n        right: false,\n        jump: false,\n        spell: false\n      }\n    };\n    const handleKeyDown = e => {\n      switch (e.key) {\n        case 'a':\n          keys.player1.left = true;\n          break;\n        case 'd':\n          keys.player1.right = true;\n          break;\n        case 'w':\n          keys.player1.jump = true;\n          break;\n        case 'e':\n          keys.player1.spell = true;\n          break;\n        case 'ArrowLeft':\n          keys.player2.left = true;\n          break;\n        case 'ArrowRight':\n          keys.player2.right = true;\n          break;\n        case 'ArrowUp':\n          keys.player2.jump = true;\n          break;\n        case 'p':\n          keys.player2.spell = true;\n          break;\n      }\n    };\n    const handleKeyUp = e => {\n      switch (e.key) {\n        case 'a':\n          keys.player1.left = false;\n          break;\n        case 'd':\n          keys.player1.right = false;\n          break;\n        case 'w':\n          keys.player1.jump = false;\n          break;\n        case 'e':\n          keys.player1.spell = false;\n          break;\n        case 'ArrowLeft':\n          keys.player2.left = false;\n          break;\n        case 'ArrowRight':\n          keys.player2.right = false;\n          break;\n        case 'ArrowUp':\n          keys.player2.jump = false;\n          break;\n        case 'p':\n          keys.player2.spell = false;\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (keys.player1.left) player1.moveLeft();\n      if (keys.player1.right) player1.moveRight();\n      if (keys.player1.jump) player1.jump();\n      if (keys.player1.spell) {\n        const spell = player1.castSpell(scene);\n        activeSpells.push(spell);\n        keys.player1.spell = false;\n      }\n      if (keys.player2.left) player2.moveLeft();\n      if (keys.player2.right) player2.moveRight();\n      if (keys.player2.jump) player2.jump();\n      if (keys.player2.spell) {\n        const spell = player2.castSpell(scene);\n        activeSpells.push(spell);\n        keys.player2.spell = false;\n      }\n      player1.update(platforms);\n      player2.update(platforms);\n      ball.update(gameHeight);\n      activeSpells = activeSpells.filter(spell => !spell.update(scene));\n      checkCollisions();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function\n    return () => {\n      var _mountRef$current;\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 bg-black/50 text-white p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Red Score: \", gameState.player1Score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Blue Score: \", gameState.player2Score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(SpyGame, \"Ha98f+fGveZVbiYmu1FKuLPia0g=\");\n_c = SpyGame;\nexport default SpyGame;\nvar _c;\n$RefreshReg$(_c, \"SpyGame\");","map":{"version":3,"names":["React","THREE","jsxDEV","_jsxDEV","PlatformClass","constructor","x","y","width","mesh","top","bottom","left","right","geometry","BoxGeometry","material","MeshPhongMaterial","color","Mesh","position","set","SpellClass","direction","velocity","lifetime","exploded","explosionRadius","explosionMesh","SphereGeometry","MeshBasicMaterial","transparent","opacity","spawnOffset","Vector3","copy","add","update","scene","explode","explosionGeo","explosionMat","setTimeout","remove","BallClass","Math","random","gameHeight","bounce","normal","speed","dot","sub","multiplyScalar","reset","PlayerClass","startX","onGround","platforms","nextPosition","clone","forEach","platform","jump","moveLeft","moveRight","castSpell","SpyGame","_s","mountRef","useRef","gameState","setGameState","useState","player1Score","player2Score","gameStatus","useEffect","current","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","getViewBounds","vFOV","MathUtils","degToRad","fov","height","tan","abs","z","aspect","viewBounds","player1","player2","ball","activeSpells","createPortal","curve","EllipseCurve","PI","points","getPoints","portalGeometry","BufferGeometry","setFromPoints","portalMaterial","LineBasicMaterial","portal","Line","floor","AmbientLight","directionalLight","DirectionalLight","keys","spell","handleKeyDown","e","key","handleKeyUp","addEventListener","animate","requestAnimationFrame","push","filter","checkCollisions","render","_mountRef$current","removeChild","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mrmetaverse/Code/portalpong/src/components/SpyGame.tsx"],"sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\n\ninterface GameState {\n  player1Score: number;\n  player2Score: number;\n  gameStatus: 'playing' | 'paused' | 'ended';\n}\n\ninterface Platform {\n  mesh: THREE.Mesh;\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nclass PlatformClass implements Platform {\n  mesh: THREE.Mesh;\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n\n  constructor(x: number, y: number, width: number = 2) {\n    const geometry = new THREE.BoxGeometry(width, 0.2, 1);\n    const material = new THREE.MeshPhongMaterial({ color: 0x95a5a6 });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.set(x, y, 0);\n\n    this.top = y + 0.1;\n    this.bottom = y - 0.1;\n    this.left = x - width/2;\n    this.right = x + width/2;\n  }\n}\n\nclass SpellClass {\n  mesh: THREE.Mesh;\n  velocity: THREE.Vector3;\n  lifetime: number;\n  exploded: boolean;\n  explosionRadius: number;\n  explosionMesh?: THREE.Mesh;\n\n  constructor(position: THREE.Vector3, direction: THREE.Vector3) {\n    const geometry = new THREE.SphereGeometry(0.2);\n    const material = new THREE.MeshBasicMaterial({ \n      color: 0xffff00,\n      transparent: true,\n      opacity: 0.8\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    \n    const spawnOffset = new THREE.Vector3(\n      direction.x * 1,\n      1,\n      0\n    );\n    this.mesh.position.copy(position).add(spawnOffset);\n    \n    this.velocity = new THREE.Vector3(\n      direction.x * 0.3,\n      0.3,\n      0\n    );\n    \n    this.lifetime = 30;\n    this.exploded = false;\n    this.explosionRadius = 1.5;\n  }\n\n  update(scene: THREE.Scene): boolean {\n    if (this.exploded) return true;\n    \n    this.lifetime--;\n    if (this.lifetime <= 0) {\n      this.explode(scene);\n      return true;\n    }\n    \n    this.mesh.position.add(this.velocity);\n    return false;\n  }\n\n  explode(scene: THREE.Scene): void {\n    this.exploded = true;\n    const explosionGeo = new THREE.SphereGeometry(this.explosionRadius);\n    const explosionMat = new THREE.MeshBasicMaterial({\n      color: 0xff8800,\n      transparent: true,\n      opacity: 0.5\n    });\n    this.explosionMesh = new THREE.Mesh(explosionGeo, explosionMat);\n    this.explosionMesh.position.copy(this.mesh.position);\n    scene.add(this.explosionMesh);\n    \n    setTimeout(() => {\n      if (this.explosionMesh) {\n        scene.remove(this.explosionMesh);\n        scene.remove(this.mesh);\n      }\n    }, 100);\n  }\n}\n\ninterface Keys {\n  player1: {\n    left: boolean;\n    right: boolean;\n    jump: boolean;\n    spell: boolean;\n  };\n  player2: {\n    left: boolean;\n    right: boolean;\n    jump: boolean;\n    spell: boolean;\n  };\n}\n\nclass BallClass {\n  mesh: THREE.Mesh;\n  velocity: THREE.Vector3;\n\n  constructor() {\n    const geometry = new THREE.SphereGeometry(0.3);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.velocity = new THREE.Vector3(\n      (Math.random() - 0.5) * 0.2,\n      (Math.random() - 0.5) * 0.2,\n      0\n    );\n    this.mesh.position.set(0, 2, 0);\n  }\n\n  update(gameHeight: number): void {\n    this.mesh.position.add(this.velocity);\n    \n    // Horizontal wrapping (endless scroll)\n    if (this.mesh.position.x > 10) this.mesh.position.x = -10;\n    if (this.mesh.position.x < -10) this.mesh.position.x = 10;\n\n    // Vertical bouncing\n    if (this.mesh.position.y > gameHeight || this.mesh.position.y < 0) {\n      this.velocity.y *= -1;\n    }\n  }\n\n  bounce(normal: THREE.Vector3, speed: number = 1): void {\n    const dot = this.velocity.dot(normal);\n    this.velocity.sub(normal.multiplyScalar(2 * dot));\n    this.velocity.multiplyScalar(speed);\n  }\n\n  reset(): void {\n    this.mesh.position.set(0, 2, 0);\n    this.velocity.set(\n      (Math.random() - 0.5) * 0.2,\n      (Math.random() - 0.5) * 0.2,\n      0\n    );\n  }\n}\n\nclass PlayerClass {\n  mesh: THREE.Mesh;\n  velocity: THREE.Vector3;\n  onGround: boolean;\n  direction: THREE.Vector3;\n\n  constructor(color: number, startX: number) {\n    const geometry = new THREE.SphereGeometry(0.5);\n    const material = new THREE.MeshBasicMaterial({ color });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.set(startX, 0, 0);\n    this.velocity = new THREE.Vector3(0, 0, 0);\n    this.onGround = true;\n    this.direction = new THREE.Vector3(1, 0, 0);\n  }\n\n  update(platforms: Platform[]): void {\n    if (!this.onGround) {\n      this.velocity.y -= 0.015; // Gravity\n    }\n\n    const nextPosition = this.mesh.position.clone().add(this.velocity);\n\n    // Platform collision\n    this.onGround = false;\n    platforms.forEach(platform => {\n      if (nextPosition.x >= platform.left && \n          nextPosition.x <= platform.right && \n          nextPosition.y >= platform.bottom &&\n          nextPosition.y <= platform.top) {\n        if (this.velocity.y < 0) {\n          nextPosition.y = platform.top;\n          this.velocity.y = 0;\n          this.onGround = true;\n        }\n      }\n    });\n\n    this.mesh.position.copy(nextPosition);\n\n    // Floor collision\n    if (this.mesh.position.y < 0) {\n      this.mesh.position.y = 0;\n      this.velocity.y = 0;\n      this.onGround = true;\n    }\n\n    // Horizontal wrapping\n    if (this.mesh.position.x > 10) this.mesh.position.x = -10;\n    if (this.mesh.position.x < -10) this.mesh.position.x = 10;\n\n    this.velocity.x *= 0.9; // Friction\n  }\n\n  jump(): void {\n    if (this.onGround) {\n      this.velocity.y = 0.6; // Increased jump height\n      this.onGround = false;\n    }\n  }\n\n  moveLeft(): void {\n    this.velocity.x = -0.15;\n    this.direction.x = -1;\n  }\n\n  moveRight(): void {\n    this.velocity.x = 0.15;\n    this.direction.x = 1;\n  }\n\n  castSpell(scene: THREE.Scene): SpellClass {\n    return new SpellClass(this.mesh.position, this.direction);\n  }\n}\n\nconst SpyGame: React.FC = () => {\n  const mountRef = React.useRef<HTMLDivElement>(null);\n  const [gameState, setGameState] = React.useState<GameState>({\n    player1Score: 0,\n    player2Score: 0,\n    gameStatus: 'playing'\n  });\n\n  React.useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x2c3e50);\n    \n    // Camera and renderer setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10);\n    \n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Calculate game boundaries\n    const getViewBounds = () => {\n      const vFOV = THREE.MathUtils.degToRad(camera.fov);\n      const height = 2 * Math.tan(vFOV / 2) * Math.abs(camera.position.z);\n      const width = height * camera.aspect;\n      return { width, height };\n    };\n\n    const viewBounds = getViewBounds();\n    const gameHeight = viewBounds.height - 1;\n\n    // Create game objects\n    const player1 = new PlayerClass(0xff0000, -5);\n    const player2 = new PlayerClass(0x0000ff, 5);\n    const ball = new BallClass();\n    let activeSpells: SpellClass[] = [];\n\n    // Add objects to scene\n    scene.add(player1.mesh);\n    scene.add(player2.mesh);\n    scene.add(ball.mesh);\n\n    // Create platforms\n    const platforms = [\n      new PlatformClass(-5, 2),\n      new PlatformClass(0, 3),\n      new PlatformClass(5, 2),\n    ];\n    platforms.forEach(platform => scene.add(platform.mesh));\n\n    // Create portals\n    const createPortal = (x: number) => {\n      const curve = new THREE.EllipseCurve(\n        x, 2.5,\n        0.5, 1.2,\n        0, 2 * Math.PI,\n        true\n      );\n      const points = curve.getPoints(50);\n      const portalGeometry = new THREE.BufferGeometry().setFromPoints(points);\n      const portalMaterial = new THREE.LineBasicMaterial({ color: x < 0 ? 0xff0000 : 0x0000ff });\n      const portal = new THREE.Line(portalGeometry, portalMaterial);\n      scene.add(portal);\n      return portal;\n    };\n\n    createPortal(-9);\n    createPortal(9);\n\n    // Create floor\n    const floor = new THREE.Mesh(\n      new THREE.BoxGeometry(20, 0.5, 5),\n      new THREE.MeshPhongMaterial({ color: 0x808080 })\n    );\n    floor.position.set(0, -1, 0);\n    scene.add(floor);\n\n    // Add lighting\n    scene.add(new THREE.AmbientLight(0xffffff, 0.5));\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n    directionalLight.position.set(0, 10, 0);\n    scene.add(directionalLight);\n\n    // Controls\n    const keys: Keys = {\n      player1: { left: false, right: false, jump: false, spell: false },\n      player2: { left: false, right: false, jump: false, spell: false }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'a': keys.player1.left = true; break;\n        case 'd': keys.player1.right = true; break;\n        case 'w': keys.player1.jump = true; break;\n        case 'e': keys.player1.spell = true; break;\n        case 'ArrowLeft': keys.player2.left = true; break;\n        case 'ArrowRight': keys.player2.right = true; break;\n        case 'ArrowUp': keys.player2.jump = true; break;\n        case 'p': keys.player2.spell = true; break;\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'a': keys.player1.left = false; break;\n        case 'd': keys.player1.right = false; break;\n        case 'w': keys.player1.jump = false; break;\n        case 'e': keys.player1.spell = false; break;\n        case 'ArrowLeft': keys.player2.left = false; break;\n        case 'ArrowRight': keys.player2.right = false; break;\n        case 'ArrowUp': keys.player2.jump = false; break;\n        case 'p': keys.player2.spell = false; break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (keys.player1.left) player1.moveLeft();\n      if (keys.player1.right) player1.moveRight();\n      if (keys.player1.jump) player1.jump();\n      if (keys.player1.spell) {\n        const spell = player1.castSpell(scene);\n        activeSpells.push(spell);\n        keys.player1.spell = false;\n      }\n\n      if (keys.player2.left) player2.moveLeft();\n      if (keys.player2.right) player2.moveRight();\n      if (keys.player2.jump) player2.jump();\n      if (keys.player2.spell) {\n        const spell = player2.castSpell(scene);\n        activeSpells.push(spell);\n        keys.player2.spell = false;\n      }\n\n      player1.update(platforms);\n      player2.update(platforms);\n      ball.update(gameHeight);\n\n      activeSpells = activeSpells.filter(spell => !spell.update(scene));\n\n      checkCollisions();\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Cleanup function\n    return () => {\n      mountRef.current?.removeChild(renderer.domElement);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full h-screen\">\n      <div ref={mountRef} className=\"w-full h-full\" />\n      <div className=\"absolute top-4 left-4 bg-black/50 text-white p-4 rounded\">\n        <div>Red Score: {gameState.player1Score}</div>\n        <div>Blue Score: {gameState.player2Score}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpyGame;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB/B,MAAMC,aAAa,CAAqB;EAOtCC,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAEC,KAAa,GAAG,CAAC,EAAE;IAAA,KANrDC,IAAI;IAAA,KACJC,GAAG;IAAA,KACHC,MAAM;IAAA,KACNC,IAAI;IAAA,KACJC,KAAK;IAGH,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,WAAW,CAACP,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACrD,MAAMQ,QAAQ,GAAG,IAAIf,KAAK,CAACgB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,IAAI,CAACT,IAAI,GAAG,IAAIR,KAAK,CAACkB,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;IAC9C,IAAI,CAACP,IAAI,CAACW,QAAQ,CAACC,GAAG,CAACf,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAI,CAACG,GAAG,GAAGH,CAAC,GAAG,GAAG;IAClB,IAAI,CAACI,MAAM,GAAGJ,CAAC,GAAG,GAAG;IACrB,IAAI,CAACK,IAAI,GAAGN,CAAC,GAAGE,KAAK,GAAC,CAAC;IACvB,IAAI,CAACK,KAAK,GAAGP,CAAC,GAAGE,KAAK,GAAC,CAAC;EAC1B;AACF;AAEA,MAAMc,UAAU,CAAC;EAQfjB,WAAWA,CAACe,QAAuB,EAAEG,SAAwB,EAAE;IAAA,KAP/Dd,IAAI;IAAA,KACJe,QAAQ;IAAA,KACRC,QAAQ;IAAA,KACRC,QAAQ;IAAA,KACRC,eAAe;IAAA,KACfC,aAAa;IAGX,MAAMd,QAAQ,GAAG,IAAIb,KAAK,CAAC4B,cAAc,CAAC,GAAG,CAAC;IAC9C,MAAMb,QAAQ,GAAG,IAAIf,KAAK,CAAC6B,iBAAiB,CAAC;MAC3CZ,KAAK,EAAE,QAAQ;MACfa,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,IAAI,CAACvB,IAAI,GAAG,IAAIR,KAAK,CAACkB,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;IAE9C,MAAMiB,WAAW,GAAG,IAAIhC,KAAK,CAACiC,OAAO,CACnCX,SAAS,CAACjB,CAAC,GAAG,CAAC,EACf,CAAC,EACD,CACF,CAAC;IACD,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACe,IAAI,CAACf,QAAQ,CAAC,CAACgB,GAAG,CAACH,WAAW,CAAC;IAElD,IAAI,CAACT,QAAQ,GAAG,IAAIvB,KAAK,CAACiC,OAAO,CAC/BX,SAAS,CAACjB,CAAC,GAAG,GAAG,EACjB,GAAG,EACH,CACF,CAAC;IAED,IAAI,CAACmB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,eAAe,GAAG,GAAG;EAC5B;EAEAU,MAAMA,CAACC,KAAkB,EAAW;IAClC,IAAI,IAAI,CAACZ,QAAQ,EAAE,OAAO,IAAI;IAE9B,IAAI,CAACD,QAAQ,EAAE;IACf,IAAI,IAAI,CAACA,QAAQ,IAAI,CAAC,EAAE;MACtB,IAAI,CAACc,OAAO,CAACD,KAAK,CAAC;MACnB,OAAO,IAAI;IACb;IAEA,IAAI,CAAC7B,IAAI,CAACW,QAAQ,CAACgB,GAAG,CAAC,IAAI,CAACZ,QAAQ,CAAC;IACrC,OAAO,KAAK;EACd;EAEAe,OAAOA,CAACD,KAAkB,EAAQ;IAChC,IAAI,CAACZ,QAAQ,GAAG,IAAI;IACpB,MAAMc,YAAY,GAAG,IAAIvC,KAAK,CAAC4B,cAAc,CAAC,IAAI,CAACF,eAAe,CAAC;IACnE,MAAMc,YAAY,GAAG,IAAIxC,KAAK,CAAC6B,iBAAiB,CAAC;MAC/CZ,KAAK,EAAE,QAAQ;MACfa,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,IAAI,CAACJ,aAAa,GAAG,IAAI3B,KAAK,CAACkB,IAAI,CAACqB,YAAY,EAAEC,YAAY,CAAC;IAC/D,IAAI,CAACb,aAAa,CAACR,QAAQ,CAACe,IAAI,CAAC,IAAI,CAAC1B,IAAI,CAACW,QAAQ,CAAC;IACpDkB,KAAK,CAACF,GAAG,CAAC,IAAI,CAACR,aAAa,CAAC;IAE7Bc,UAAU,CAAC,MAAM;MACf,IAAI,IAAI,CAACd,aAAa,EAAE;QACtBU,KAAK,CAACK,MAAM,CAAC,IAAI,CAACf,aAAa,CAAC;QAChCU,KAAK,CAACK,MAAM,CAAC,IAAI,CAAClC,IAAI,CAAC;MACzB;IACF,CAAC,EAAE,GAAG,CAAC;EACT;AACF;AAiBA,MAAMmC,SAAS,CAAC;EAIdvC,WAAWA,CAAA,EAAG;IAAA,KAHdI,IAAI;IAAA,KACJe,QAAQ;IAGN,MAAMV,QAAQ,GAAG,IAAIb,KAAK,CAAC4B,cAAc,CAAC,GAAG,CAAC;IAC9C,MAAMb,QAAQ,GAAG,IAAIf,KAAK,CAAC6B,iBAAiB,CAAC;MAAEZ,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,IAAI,CAACT,IAAI,GAAG,IAAIR,KAAK,CAACkB,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;IAC9C,IAAI,CAACQ,QAAQ,GAAG,IAAIvB,KAAK,CAACiC,OAAO,CAC/B,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,EAC3B,CAACD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,EAC3B,CACF,CAAC;IACD,IAAI,CAACrC,IAAI,CAACW,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC;EAEAgB,MAAMA,CAACU,UAAkB,EAAQ;IAC/B,IAAI,CAACtC,IAAI,CAACW,QAAQ,CAACgB,GAAG,CAAC,IAAI,CAACZ,QAAQ,CAAC;;IAErC;IACA,IAAI,IAAI,CAACf,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,EAAE,EAAE,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,CAAC,EAAE;IACzD,IAAI,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,EAAE;;IAEzD;IACA,IAAI,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACb,CAAC,GAAGwC,UAAU,IAAI,IAAI,CAACtC,IAAI,CAACW,QAAQ,CAACb,CAAC,GAAG,CAAC,EAAE;MACjE,IAAI,CAACiB,QAAQ,CAACjB,CAAC,IAAI,CAAC,CAAC;IACvB;EACF;EAEAyC,MAAMA,CAACC,MAAqB,EAAEC,KAAa,GAAG,CAAC,EAAQ;IACrD,MAAMC,GAAG,GAAG,IAAI,CAAC3B,QAAQ,CAAC2B,GAAG,CAACF,MAAM,CAAC;IACrC,IAAI,CAACzB,QAAQ,CAAC4B,GAAG,CAACH,MAAM,CAACI,cAAc,CAAC,CAAC,GAAGF,GAAG,CAAC,CAAC;IACjD,IAAI,CAAC3B,QAAQ,CAAC6B,cAAc,CAACH,KAAK,CAAC;EACrC;EAEAI,KAAKA,CAAA,EAAS;IACZ,IAAI,CAAC7C,IAAI,CAACW,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,CAACG,QAAQ,CAACH,GAAG,CACf,CAACwB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,EAC3B,CAACD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,EAC3B,CACF,CAAC;EACH;AACF;AAEA,MAAMS,WAAW,CAAC;EAMhBlD,WAAWA,CAACa,KAAa,EAAEsC,MAAc,EAAE;IAAA,KAL3C/C,IAAI;IAAA,KACJe,QAAQ;IAAA,KACRiC,QAAQ;IAAA,KACRlC,SAAS;IAGP,MAAMT,QAAQ,GAAG,IAAIb,KAAK,CAAC4B,cAAc,CAAC,GAAG,CAAC;IAC9C,MAAMb,QAAQ,GAAG,IAAIf,KAAK,CAAC6B,iBAAiB,CAAC;MAAEZ;IAAM,CAAC,CAAC;IACvD,IAAI,CAACT,IAAI,GAAG,IAAIR,KAAK,CAACkB,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;IAC9C,IAAI,CAACP,IAAI,CAACW,QAAQ,CAACC,GAAG,CAACmC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,IAAI,CAAChC,QAAQ,GAAG,IAAIvB,KAAK,CAACiC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1C,IAAI,CAACuB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAClC,SAAS,GAAG,IAAItB,KAAK,CAACiC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7C;EAEAG,MAAMA,CAACqB,SAAqB,EAAQ;IAClC,IAAI,CAAC,IAAI,CAACD,QAAQ,EAAE;MAClB,IAAI,CAACjC,QAAQ,CAACjB,CAAC,IAAI,KAAK,CAAC,CAAC;IAC5B;IAEA,MAAMoD,YAAY,GAAG,IAAI,CAAClD,IAAI,CAACW,QAAQ,CAACwC,KAAK,CAAC,CAAC,CAACxB,GAAG,CAAC,IAAI,CAACZ,QAAQ,CAAC;;IAElE;IACA,IAAI,CAACiC,QAAQ,GAAG,KAAK;IACrBC,SAAS,CAACG,OAAO,CAACC,QAAQ,IAAI;MAC5B,IAAIH,YAAY,CAACrD,CAAC,IAAIwD,QAAQ,CAAClD,IAAI,IAC/B+C,YAAY,CAACrD,CAAC,IAAIwD,QAAQ,CAACjD,KAAK,IAChC8C,YAAY,CAACpD,CAAC,IAAIuD,QAAQ,CAACnD,MAAM,IACjCgD,YAAY,CAACpD,CAAC,IAAIuD,QAAQ,CAACpD,GAAG,EAAE;QAClC,IAAI,IAAI,CAACc,QAAQ,CAACjB,CAAC,GAAG,CAAC,EAAE;UACvBoD,YAAY,CAACpD,CAAC,GAAGuD,QAAQ,CAACpD,GAAG;UAC7B,IAAI,CAACc,QAAQ,CAACjB,CAAC,GAAG,CAAC;UACnB,IAAI,CAACkD,QAAQ,GAAG,IAAI;QACtB;MACF;IACF,CAAC,CAAC;IAEF,IAAI,CAAChD,IAAI,CAACW,QAAQ,CAACe,IAAI,CAACwB,YAAY,CAAC;;IAErC;IACA,IAAI,IAAI,CAAClD,IAAI,CAACW,QAAQ,CAACb,CAAC,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACE,IAAI,CAACW,QAAQ,CAACb,CAAC,GAAG,CAAC;MACxB,IAAI,CAACiB,QAAQ,CAACjB,CAAC,GAAG,CAAC;MACnB,IAAI,CAACkD,QAAQ,GAAG,IAAI;IACtB;;IAEA;IACA,IAAI,IAAI,CAAChD,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,EAAE,EAAE,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,CAAC,EAAE;IACzD,IAAI,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAACG,IAAI,CAACW,QAAQ,CAACd,CAAC,GAAG,EAAE;IAEzD,IAAI,CAACkB,QAAQ,CAAClB,CAAC,IAAI,GAAG,CAAC,CAAC;EAC1B;EAEAyD,IAAIA,CAAA,EAAS;IACX,IAAI,IAAI,CAACN,QAAQ,EAAE;MACjB,IAAI,CAACjC,QAAQ,CAACjB,CAAC,GAAG,GAAG,CAAC,CAAC;MACvB,IAAI,CAACkD,QAAQ,GAAG,KAAK;IACvB;EACF;EAEAO,QAAQA,CAAA,EAAS;IACf,IAAI,CAACxC,QAAQ,CAAClB,CAAC,GAAG,CAAC,IAAI;IACvB,IAAI,CAACiB,SAAS,CAACjB,CAAC,GAAG,CAAC,CAAC;EACvB;EAEA2D,SAASA,CAAA,EAAS;IAChB,IAAI,CAACzC,QAAQ,CAAClB,CAAC,GAAG,IAAI;IACtB,IAAI,CAACiB,SAAS,CAACjB,CAAC,GAAG,CAAC;EACtB;EAEA4D,SAASA,CAAC5B,KAAkB,EAAc;IACxC,OAAO,IAAIhB,UAAU,CAAC,IAAI,CAACb,IAAI,CAACW,QAAQ,EAAE,IAAI,CAACG,SAAS,CAAC;EAC3D;AACF;AAEA,MAAM4C,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGrE,KAAK,CAACsE,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxE,KAAK,CAACyE,QAAQ,CAAY;IAC1DC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF5E,KAAK,CAAC6E,SAAS,CAAC,MAAM;IACpB,IAAI,CAACR,QAAQ,CAACS,OAAO,EAAE;;IAEvB;IACA,MAAMxC,KAAK,GAAG,IAAIrC,KAAK,CAAC8E,KAAK,CAAC,CAAC;IAC/BzC,KAAK,CAAC0C,UAAU,GAAG,IAAI/E,KAAK,CAACgF,KAAK,CAAC,QAAQ,CAAC;;IAE5C;IACA,MAAMC,MAAM,GAAG,IAAIjF,KAAK,CAACkF,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjGJ,MAAM,CAAC9D,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAE7B,MAAMkE,QAAQ,GAAG,IAAItF,KAAK,CAACuF,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDjB,QAAQ,CAACS,OAAO,CAACa,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,IAAI,GAAG7F,KAAK,CAAC8F,SAAS,CAACC,QAAQ,CAACd,MAAM,CAACe,GAAG,CAAC;MACjD,MAAMC,MAAM,GAAG,CAAC,GAAGrD,IAAI,CAACsD,GAAG,CAACL,IAAI,GAAG,CAAC,CAAC,GAAGjD,IAAI,CAACuD,GAAG,CAAClB,MAAM,CAAC9D,QAAQ,CAACiF,CAAC,CAAC;MACnE,MAAM7F,KAAK,GAAG0F,MAAM,GAAGhB,MAAM,CAACoB,MAAM;MACpC,OAAO;QAAE9F,KAAK;QAAE0F;MAAO,CAAC;IAC1B,CAAC;IAED,MAAMK,UAAU,GAAGV,aAAa,CAAC,CAAC;IAClC,MAAM9C,UAAU,GAAGwD,UAAU,CAACL,MAAM,GAAG,CAAC;;IAExC;IACA,MAAMM,OAAO,GAAG,IAAIjD,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC7C,MAAMkD,OAAO,GAAG,IAAIlD,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5C,MAAMmD,IAAI,GAAG,IAAI9D,SAAS,CAAC,CAAC;IAC5B,IAAI+D,YAA0B,GAAG,EAAE;;IAEnC;IACArE,KAAK,CAACF,GAAG,CAACoE,OAAO,CAAC/F,IAAI,CAAC;IACvB6B,KAAK,CAACF,GAAG,CAACqE,OAAO,CAAChG,IAAI,CAAC;IACvB6B,KAAK,CAACF,GAAG,CAACsE,IAAI,CAACjG,IAAI,CAAC;;IAEpB;IACA,MAAMiD,SAAS,GAAG,CAChB,IAAItD,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACxB,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EACvB,IAAIA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CACxB;IACDsD,SAAS,CAACG,OAAO,CAACC,QAAQ,IAAIxB,KAAK,CAACF,GAAG,CAAC0B,QAAQ,CAACrD,IAAI,CAAC,CAAC;;IAEvD;IACA,MAAMmG,YAAY,GAAItG,CAAS,IAAK;MAClC,MAAMuG,KAAK,GAAG,IAAI5G,KAAK,CAAC6G,YAAY,CAClCxG,CAAC,EAAE,GAAG,EACN,GAAG,EAAE,GAAG,EACR,CAAC,EAAE,CAAC,GAAGuC,IAAI,CAACkE,EAAE,EACd,IACF,CAAC;MACD,MAAMC,MAAM,GAAGH,KAAK,CAACI,SAAS,CAAC,EAAE,CAAC;MAClC,MAAMC,cAAc,GAAG,IAAIjH,KAAK,CAACkH,cAAc,CAAC,CAAC,CAACC,aAAa,CAACJ,MAAM,CAAC;MACvE,MAAMK,cAAc,GAAG,IAAIpH,KAAK,CAACqH,iBAAiB,CAAC;QAAEpG,KAAK,EAAEZ,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG;MAAS,CAAC,CAAC;MAC1F,MAAMiH,MAAM,GAAG,IAAItH,KAAK,CAACuH,IAAI,CAACN,cAAc,EAAEG,cAAc,CAAC;MAC7D/E,KAAK,CAACF,GAAG,CAACmF,MAAM,CAAC;MACjB,OAAOA,MAAM;IACf,CAAC;IAEDX,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBA,YAAY,CAAC,CAAC,CAAC;;IAEf;IACA,MAAMa,KAAK,GAAG,IAAIxH,KAAK,CAACkB,IAAI,CAC1B,IAAIlB,KAAK,CAACc,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EACjC,IAAId,KAAK,CAACgB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CACjD,CAAC;IACDuG,KAAK,CAACrG,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5BiB,KAAK,CAACF,GAAG,CAACqF,KAAK,CAAC;;IAEhB;IACAnF,KAAK,CAACF,GAAG,CAAC,IAAInC,KAAK,CAACyH,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IAChD,MAAMC,gBAAgB,GAAG,IAAI1H,KAAK,CAAC2H,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC;IAClED,gBAAgB,CAACvG,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvCiB,KAAK,CAACF,GAAG,CAACuF,gBAAgB,CAAC;;IAE3B;IACA,MAAME,IAAU,GAAG;MACjBrB,OAAO,EAAE;QAAE5F,IAAI,EAAE,KAAK;QAAEC,KAAK,EAAE,KAAK;QAAEkD,IAAI,EAAE,KAAK;QAAE+D,KAAK,EAAE;MAAM,CAAC;MACjErB,OAAO,EAAE;QAAE7F,IAAI,EAAE,KAAK;QAAEC,KAAK,EAAE,KAAK;QAAEkD,IAAI,EAAE,KAAK;QAAE+D,KAAK,EAAE;MAAM;IAClE,CAAC;IAED,MAAMC,aAAa,GAAIC,CAAgB,IAAK;MAC1C,QAAOA,CAAC,CAACC,GAAG;QACV,KAAK,GAAG;UAAEJ,IAAI,CAACrB,OAAO,CAAC5F,IAAI,GAAG,IAAI;UAAE;QACpC,KAAK,GAAG;UAAEiH,IAAI,CAACrB,OAAO,CAAC3F,KAAK,GAAG,IAAI;UAAE;QACrC,KAAK,GAAG;UAAEgH,IAAI,CAACrB,OAAO,CAACzC,IAAI,GAAG,IAAI;UAAE;QACpC,KAAK,GAAG;UAAE8D,IAAI,CAACrB,OAAO,CAACsB,KAAK,GAAG,IAAI;UAAE;QACrC,KAAK,WAAW;UAAED,IAAI,CAACpB,OAAO,CAAC7F,IAAI,GAAG,IAAI;UAAE;QAC5C,KAAK,YAAY;UAAEiH,IAAI,CAACpB,OAAO,CAAC5F,KAAK,GAAG,IAAI;UAAE;QAC9C,KAAK,SAAS;UAAEgH,IAAI,CAACpB,OAAO,CAAC1C,IAAI,GAAG,IAAI;UAAE;QAC1C,KAAK,GAAG;UAAE8D,IAAI,CAACpB,OAAO,CAACqB,KAAK,GAAG,IAAI;UAAE;MACvC;IACF,CAAC;IAED,MAAMI,WAAW,GAAIF,CAAgB,IAAK;MACxC,QAAOA,CAAC,CAACC,GAAG;QACV,KAAK,GAAG;UAAEJ,IAAI,CAACrB,OAAO,CAAC5F,IAAI,GAAG,KAAK;UAAE;QACrC,KAAK,GAAG;UAAEiH,IAAI,CAACrB,OAAO,CAAC3F,KAAK,GAAG,KAAK;UAAE;QACtC,KAAK,GAAG;UAAEgH,IAAI,CAACrB,OAAO,CAACzC,IAAI,GAAG,KAAK;UAAE;QACrC,KAAK,GAAG;UAAE8D,IAAI,CAACrB,OAAO,CAACsB,KAAK,GAAG,KAAK;UAAE;QACtC,KAAK,WAAW;UAAED,IAAI,CAACpB,OAAO,CAAC7F,IAAI,GAAG,KAAK;UAAE;QAC7C,KAAK,YAAY;UAAEiH,IAAI,CAACpB,OAAO,CAAC5F,KAAK,GAAG,KAAK;UAAE;QAC/C,KAAK,SAAS;UAAEgH,IAAI,CAACpB,OAAO,CAAC1C,IAAI,GAAG,KAAK;UAAE;QAC3C,KAAK,GAAG;UAAE8D,IAAI,CAACpB,OAAO,CAACqB,KAAK,GAAG,KAAK;UAAE;MACxC;IACF,CAAC;IAED1C,MAAM,CAAC+C,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACjD3C,MAAM,CAAC+C,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;;IAE7C;IACA,MAAME,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAE9B,IAAIP,IAAI,CAACrB,OAAO,CAAC5F,IAAI,EAAE4F,OAAO,CAACxC,QAAQ,CAAC,CAAC;MACzC,IAAI6D,IAAI,CAACrB,OAAO,CAAC3F,KAAK,EAAE2F,OAAO,CAACvC,SAAS,CAAC,CAAC;MAC3C,IAAI4D,IAAI,CAACrB,OAAO,CAACzC,IAAI,EAAEyC,OAAO,CAACzC,IAAI,CAAC,CAAC;MACrC,IAAI8D,IAAI,CAACrB,OAAO,CAACsB,KAAK,EAAE;QACtB,MAAMA,KAAK,GAAGtB,OAAO,CAACtC,SAAS,CAAC5B,KAAK,CAAC;QACtCqE,YAAY,CAAC2B,IAAI,CAACR,KAAK,CAAC;QACxBD,IAAI,CAACrB,OAAO,CAACsB,KAAK,GAAG,KAAK;MAC5B;MAEA,IAAID,IAAI,CAACpB,OAAO,CAAC7F,IAAI,EAAE6F,OAAO,CAACzC,QAAQ,CAAC,CAAC;MACzC,IAAI6D,IAAI,CAACpB,OAAO,CAAC5F,KAAK,EAAE4F,OAAO,CAACxC,SAAS,CAAC,CAAC;MAC3C,IAAI4D,IAAI,CAACpB,OAAO,CAAC1C,IAAI,EAAE0C,OAAO,CAAC1C,IAAI,CAAC,CAAC;MACrC,IAAI8D,IAAI,CAACpB,OAAO,CAACqB,KAAK,EAAE;QACtB,MAAMA,KAAK,GAAGrB,OAAO,CAACvC,SAAS,CAAC5B,KAAK,CAAC;QACtCqE,YAAY,CAAC2B,IAAI,CAACR,KAAK,CAAC;QACxBD,IAAI,CAACpB,OAAO,CAACqB,KAAK,GAAG,KAAK;MAC5B;MAEAtB,OAAO,CAACnE,MAAM,CAACqB,SAAS,CAAC;MACzB+C,OAAO,CAACpE,MAAM,CAACqB,SAAS,CAAC;MACzBgD,IAAI,CAACrE,MAAM,CAACU,UAAU,CAAC;MAEvB4D,YAAY,GAAGA,YAAY,CAAC4B,MAAM,CAACT,KAAK,IAAI,CAACA,KAAK,CAACzF,MAAM,CAACC,KAAK,CAAC,CAAC;MAEjEkG,eAAe,CAAC,CAAC;MACjBjD,QAAQ,CAACkD,MAAM,CAACnG,KAAK,EAAE4C,MAAM,CAAC;IAChC,CAAC;IAEDkD,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MAAA,IAAAM,iBAAA;MACX,CAAAA,iBAAA,GAAArE,QAAQ,CAACS,OAAO,cAAA4D,iBAAA,uBAAhBA,iBAAA,CAAkBC,WAAW,CAACpD,QAAQ,CAACK,UAAU,CAAC;MAClDR,MAAM,CAACwD,mBAAmB,CAAC,SAAS,EAAEb,aAAa,CAAC;MACpD3C,MAAM,CAACwD,mBAAmB,CAAC,OAAO,EAAEV,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/H,OAAA;IAAK0I,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B3I,OAAA;MAAK4I,GAAG,EAAE1E,QAAS;MAACwE,SAAS,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDhJ,OAAA;MAAK0I,SAAS,EAAC,0DAA0D;MAAAC,QAAA,gBACvE3I,OAAA;QAAA2I,QAAA,GAAK,aAAW,EAACvE,SAAS,CAACG,YAAY;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9ChJ,OAAA;QAAA2I,QAAA,GAAK,cAAY,EAACvE,SAAS,CAACI,YAAY;MAAA;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/E,EAAA,CA5KID,OAAiB;AAAAiF,EAAA,GAAjBjF,OAAiB;AA8KvB,eAAeA,OAAO;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}